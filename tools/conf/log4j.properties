### set log levels ###
#说明：推荐class或package级别设置，不要设置 log4j.rootLogger, 会打印 kafka, zookeeeper 的日志
#log4j.rootLogger = debug ,  stdout ,  D ,  E
#log4j.rootLogger = info ,  stdout
#log4j.logger.tools = debug, stdout
log4j.logger.tools = info, stdout

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c:%L - %m%n
log4j.appender.stdout.layout.ConversionPattern =  %d{yyyy-MM-dd HH:mm:ss.SSS} %r [%5p] %c:%L [%t] : %m%n

#### 输出到日志文件 ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.D.File = logs/debug.log
#log4j.appender.D.Append = true
### 输出DEBUG级别以上的日志
#log4j.appender.D.Threshold = DEBUG
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#
#### 保存异常信息到单独文件 ###
#log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
### 异常日志文件名
#log4j.appender.E.File = logs/error.log
#log4j.appender.E.Append = true
### 只输出ERROR级别以上的日志!!!
#log4j.appender.E.Threshold = ERROR
#log4j.appender.E.layout = org.apache.log4j.PatternLayout
#log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
